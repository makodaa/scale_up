{
import "package:scale_up/data/sources/lessons/"
    "lessons_helper/expression.dart";
}

Expression rule = ^ :expr $ { expr };

Expression expr =
  | :expr _ "+" _ :term { AdditionExpression(expr, term) }
  | :expr _ "-" _ :term { SubtractionExpression(expr, term) }
  | term;

Expression term =
  | "-" _ :term            { NegationExpression(term) }
  | :term _ "*" _ :factor  { MultiplicationExpression(term, factor) }
  | :term _ "/" _ :factor  { DivisionExpression(term, factor) }
  | factor;

Expression factor =
  | :primary _ "^" _ :factor { PowerExpression(primary, factor) }
  | primary;

Expression primary =
  | "(" _ :expr _ ")" { expr }
  | number;


Expression number =
  | json.atom.number { ConstantExpression(double.parse(span)) }
  | \d+ { ConstantExpression(int.parse(span)) }
  | [A-Za-z_] [A-Za-z0-9_]* { VariableExpression(span) }
  ;

_ = \s* { () };